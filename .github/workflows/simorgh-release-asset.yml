name: Simorgh CI - Automatic Release
on:
  push:
    branches:
      - latest
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    env:
      CI: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get New Release TagName
        id: newReleaseTagName
        if: github.event.pull_request.head.repo.full_name == 'bbc/simorgh' # Only run when not on a fork
        run: |
          curl \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/bbc/${{ github.repository }}/releases/latest \
          --fail \
          | jq -r '.tag_name' \
          | awk 'BEGIN{FS=OFS="."} {$2+=1} 1'

      - name: Get New Release Commit Message
        id: newReleaseMessage
        if: github.event.pull_request.head.repo.full_name == 'bbc/simorgh' # Only run when not on a fork
        run: |
          curl \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/bbc/${{ github.repository }}/commits/latest \
          --fail \
          | jq -r '.commit.message'

      - name: Publish 
        if: github.event.pull_request.head.repo.full_name == 'bbc/simorgh' # Only run when not on a fork
        run: |
          curl \
          -X POST \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/bbc/${{ github.repository }}/releases \
          -d '{
            "tag_name": "${{ steps.newReleaseTagName }}", 
            "target_commitish": "latest", 
            "name": "Release ${{ steps.newReleaseTagName }}", 
            "body": "${{ steps.newReleaseMessage }}",
            "draft": false,
            "prerelease": false,
            "generate_release_notes": false
          }' \
          --fail
